{"version":3,"file":"static/js/918.a7359baa.chunk.js","mappings":"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","sources":["components/ListItem/ListItem.styled.jsx","components/ListItem/ListItem.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/AddContact/AddContacts.styled.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/AddContact/AddContact.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 90px;\n  padding: 5px;\n`;\n\nexport const ListItemPar = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: orangered;\n`;\n","import { useDispatch } from 'react-redux';\nimport { ListItem, Button, ListItemPar } from './ListItem.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const removeContact = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ListItem>\n      <ListItemPar>\n        {name}: {number}\n      </ListItemPar>\n      <Button type=\"button\" onClick={removeContact}>\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilteredContacts = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilteredContacts],\n  (contacts, filters) => {\n    const filterLowCase = filters.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterLowCase)\n    );\n  }\n);\n","import ContactItem from 'components/ListItem/ListItem';\nimport { List } from './ContactList.styled';\nimport {\n  selectError,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\n\nimport { Message } from 'components/App.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      {!visibleContacts?.length && !error && (\n        <Message>\n          There are no contacts in your phonebook. Please add your first\n          contact!\n        </Message>\n      )}\n      <List>\n        {visibleContacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 25px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilteredContacts);\n  const handleOnChange = evt => {\n    evt.preventDefault();\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        name=\"filter\"\n        type=\"text\"\n        value={filterValue}\n        onChange={handleOnChange}\n      ></Input>\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 15px;\n`;\n","import styled from 'styled-components';\n\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const FormGroup = styled.label`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 16px;\n  color: red;\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Field, FormGroup, ErrorMessage } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport { addContact } from '../../redux/contacts/operations';\nimport Notiflix from 'notiflix';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  number: Yup.string().required('Number is required'),\n});\n\nconst ContactForm = ({ closeModal }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n      )\n    ) {\n      Notiflix.Notify.failure(`${name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    Notiflix.Notify.success(\n      `Contact with name ${name} has been added successfully to contacts list.`\n    );\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormGroup>\n          <h3>Name</h3>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter a name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          <h3>Number</h3>\n          <Field\n            name=\"number\"\n            type=\"tel\"\n            placeholder=\"Enter a phone-number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormGroup>\n\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { Section, SectionTitle } from './AddContacts.styled';\nimport ContactForm from '../Form/Form';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\nconst AddContact = () => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div>\n      <button onClick={openModal}>Add contact</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add contact\"\n      >\n        <Section>\n          <SectionTitle>Add contact</SectionTitle>\n          <ContactForm closeModal={closeModal} />\n        </Section>\n        <button onClick={closeModal}>Close</button>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddContact;\n","import { Container, Section, SectionTitle } from 'components/App.styled';\nimport { ContactList } from '../components/ContactList/ContactList';\n// import ContactForm from 'components/Form/Form';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\nimport Filter from 'components/Filter/Filter';\nimport AddContact from 'components/AddContact/AddContact';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <Section>\n        <SectionTitle>Add contact</SectionTitle>\n        <AddContact />\n      </Section>\n      <Section>\n        <SectionTitle>Contacts</SectionTitle>\n\n        <Filter />\n        {isLoading && !error && <Loader />}\n\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\nexport default ContactsPage;\n"],"names":["ListItem","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","ListItemPar","_templateObject3","_ref","id","name","number","dispatch","useDispatch","_jsxs","children","_jsx","type","onClick","deleteContact","List","selectContacts","state","contacts","selectFilteredContacts","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filters","filterLowCase","toLowerCase","trim","contact","includes","ContactList","visibleContacts","useSelector","useEffect","fetchContacts","_Fragment","length","Message","map","ContactItem","Label","Input","filterValue","value","onChange","evt","preventDefault","setFilter","target","Section","SectionTitle","FormGroup","Field","FormikField","ErrorMessage","FormikError","Form","FormikForm","_templateObject4","FormSchema","Yup","shape","required","closeModal","Formik","initialValues","validationSchema","onSubmit","values","_ref2","resetForm","find","Notiflix","concat","addContact","placeholder","pattern","component","customStyles","content","top","left","right","bottom","marginRight","transform","display","flexDirection","_React$useState","React","_React$useState2","_slicedToArray","modalIsOpen","setIsOpen","Modal","isOpen","onRequestClose","style","contentLabel","ContactForm","Container","AddContact","Filter","Loader"],"sourceRoot":""}